name: OC Lettings CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master  # Support both main and master as primary branches
  pull_request:
    branches:
      - main
      - master

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run flake8
        run: flake8
      
      - name: Run pytest with coverage
        run: |
          pytest --cov=. --cov-report=xml
          pytest --cov=. --cov-report=term-missing --cov-fail-under=80
  
  build:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Generate short SHA
        id: short-sha
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            purityoff/oc-lettings:latest
            purityoff/oc-lettings:${{ steps.short-sha.outputs.sha }}
  
  deploy:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: Deploy to Render
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          method: 'POST' 
